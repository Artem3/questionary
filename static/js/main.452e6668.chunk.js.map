{"version":3,"sources":["logo.svg","components/CurrentQuestionForm.jsx","components/AnswerTable.jsx","components/DataProvider.jsx","components/Constructor.jsx","App.js","index.js"],"names":["CurrentQuestionForm","props","useState","givenAnswer","setGivenAnswer","handleClick","onClick","Card","bg","text","style","alignItems","Title","width","currentQuestion","qText","type","value","textAlign","borderRadius","borderWidth","onChange","e","target","ref","focus","onFocus","currentTarget","setSelectionRange","length","onKeyDown","key","handleEnterKey","Button","variant","className","AnswerTable","results","totalCount","listStyleType","totalCorrectAnswered","incorrectAnswers","detailedResults","DataProvider","qList","setQList","callBack","hasBeenCalled","setHasBeenCalled","constructor","testDataJsonArray","sort","Math","random","currentIndex","setCurrentIndex","isListCompleted","test","setTest","list","Object","values","filter","i","expectedAnswer","console","log","calculateCompactResult","unsweredQuestion","splice","App","Container","src","logo","alt","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.452e6668.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { useState } from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Card from \"react-bootstrap/Card\";\r\n\r\nexport default function CurrentQuestionForm(props) {\r\n  const [givenAnswer, setGivenAnswer] = useState(\"\");\r\n  const handleClick = () => {\r\n    props.onClick(givenAnswer);\r\n    setGivenAnswer(\"\");\r\n  };\r\n\r\n  function handleEnterKey(e) {\r\n    if (e.key === \"Enter\") {\r\n      handleClick();\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Card bg=\"light\" text=\"dark\" style={{ alignItems: \"center\" }}>\r\n      <Card.Title style={{ width: \"30rem\" }}>\r\n        {props.currentQuestion.qText}\r\n      </Card.Title>\r\n      <input\r\n        type=\"text\"\r\n        value={givenAnswer}\r\n        style={{ textAlign: \"center\", borderRadius: \"5px\", borderWidth: \"1px\" }}\r\n        onChange={(e) => setGivenAnswer(e.target.value)}\r\n        ref={(ref) => ref && ref.focus()}\r\n        onFocus={(e) =>\r\n          e.currentTarget.setSelectionRange(\r\n            e.currentTarget.value.length,\r\n            e.currentTarget.value.length\r\n          )\r\n        }\r\n        onKeyDown={(e) => handleEnterKey(e)}\r\n      />\r\n      <Button\r\n        variant=\"info\"\r\n        style={{ width: \"8rem\" }}\r\n        className=\"mt-2 mb-2\"\r\n        onClick={handleClick}\r\n      >\r\n        Next &gt;&gt;\r\n      </Button>\r\n    </Card>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function AnswerTable(props) {\r\n  const handleDetailResult = () => {\r\n    props.onClick();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <p>\r\n        Out of <big>{props.results.totalCount}</big> questions, your result is\r\n      </p>\r\n      <ul style={{ listStyleType: \"none\" }}>\r\n        <li>\r\n          Correct answers: <b>{props.results.totalCorrectAnswered}</b>\r\n        </li>\r\n        <li>Wrong answers: <b>{props.results.incorrectAnswers}</b></li>\r\n      </ul>\r\n      <br />\r\n      <button onClick={handleDetailResult}>See detailed results</button>\r\n      <div>{props.detailedResults}</div>\r\n      <br />\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport testDataJsonArray from \"../data/test-data.json\";\r\nimport CurrentQuestionForm from \"./CurrentQuestionForm\";\r\nimport AnswerTable from \"./AnswerTable\";\r\nimport constructor from \"./Constructor\";\r\n\r\nexport default function DataProvider() {\r\n  const [qList, setQList] = useState(\"\");\r\n\r\n  // shuffl array once at the begining\r\n  constructor(() => {\r\n    const shuffle = (list) => list.sort(() => 0.5 - Math.random());\r\n    setQList(shuffle(testDataJsonArray));\r\n  });\r\n  const [currentIndex, setCurrentIndex] = useState(0);\r\n  const isListCompleted = currentIndex <= qList.length - 1 ? false : true;\r\n  const [test, setTest] = useState(\"\");\r\n\r\n  // update current question with an answer\r\n  const setNextQuestion = (givenAnswer) => {\r\n    qList[currentIndex].givenAnswer = givenAnswer;\r\n    const unsweredQuestion = qList[currentIndex];\r\n    qList.splice(currentIndex, 1, unsweredQuestion);\r\n    setQList(qList);\r\n    setCurrentIndex(currentIndex + 1);\r\n  };\r\n\r\n  function calculateCompactResult() {\r\n    const totalCount = qList.length;\r\n    const list = Object.values(qList);\r\n    const incorrectAnswers = list.filter((i) => i.givenAnswer !== i.expectedAnswer).length;\r\n    const totalCorrectAnswered = list.filter((i) => i.expectedAnswer == i.givenAnswer).length;\r\n\r\n    if (incorrectAnswers + totalCorrectAnswered !== totalCount) {\r\n      console.log(\"Incorrect result calculation!\");\r\n    }\r\n\r\n    return {\r\n      totalCount: totalCount,\r\n      incorrectAnswers: incorrectAnswers,\r\n      totalCorrectAnswered: totalCorrectAnswered,\r\n    };\r\n  }\r\n\r\n  const calculateDatailedResult = () => {\r\n    console.log(88);\r\n    setTest(\"abcd\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {isListCompleted ? (\r\n        <div>\r\n          <h2>Test completed!</h2>\r\n          <AnswerTable\r\n            results={calculateCompactResult()}\r\n            onClick={calculateDatailedResult}\r\n            detailedResults={test}\r\n          />\r\n        </div>\r\n      ) : (\r\n        <CurrentQuestionForm\r\n          onClick={setNextQuestion}\r\n          currentQuestion={qList[currentIndex]}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import { useState } from \"react\";\r\n\r\nexport default function Constructor(callBack = () => {}) {\r\n  const [hasBeenCalled, setHasBeenCalled] = useState(false);\r\n  if (hasBeenCalled) return;\r\n  callBack();\r\n  setHasBeenCalled(true);\r\n}\r\n","import logo from './logo.svg';\r\nimport './App.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Container from \"react-bootstrap/Container\";\r\nimport DataProvider from './components/DataProvider'\r\n\r\nfunction App() {\r\n  return (\r\n    <Container>\r\n      <div className=\"App\">\r\n        <header className=\"App-header\">\r\n          <DataProvider />\r\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n        </header>\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <App />, document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}