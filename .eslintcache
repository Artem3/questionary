[{"D:\\prj\\questionnaire\\src\\App.js":"1","D:\\prj\\questionnaire\\src\\components\\DataProvider.jsx":"2","D:\\prj\\questionnaire\\src\\components\\CurrentQuestionForm.jsx":"3","D:\\prj\\questionnaire\\src\\components\\AnswerTable.jsx":"4","D:\\prj\\questionnaire\\src\\index.js":"5","D:\\prj\\questionnaire\\src\\components\\Constructor.jsx":"6"},{"size":499,"mtime":1608706296710,"results":"7","hashOfConfig":"8"},{"size":2271,"mtime":1608727846489,"results":"9","hashOfConfig":"8"},{"size":1313,"mtime":1608706296711,"results":"10","hashOfConfig":"8"},{"size":1478,"mtime":1608737357455,"results":"11","hashOfConfig":"8"},{"size":182,"mtime":1608706296712,"results":"12","hashOfConfig":"8"},{"size":234,"mtime":1608706296710,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1lp8twg",{"filePath":"16","messages":"17","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\prj\\questionnaire\\src\\App.js",[],"D:\\prj\\questionnaire\\src\\components\\DataProvider.jsx",["28"],"import React, { useState } from \"react\";\r\nimport testDataJsonArray from \"../data/test-data.json\";\r\nimport CurrentQuestionForm from \"./CurrentQuestionForm\";\r\nimport AnswerTable from \"./AnswerTable\";\r\nimport constructor from \"./Constructor\";\r\n\r\nexport default function DataProvider() {\r\n  const [qList, setQList] = useState(\"\");\r\n\r\n  // shuffl array once at the begining\r\n  constructor(() => {\r\n    const shuffle = (list) => list.sort(() => 0.5 - Math.random());\r\n    setQList(shuffle(testDataJsonArray));\r\n  });\r\n  const [currentIndex, setCurrentIndex] = useState(0);\r\n  const isListCompleted = currentIndex <= qList.length - 1 ? false : true;\r\n  // const [test, setTest] = useState(\"\");\r\n  const [displayTable, setDisplayTable] = useState(false);\r\n\r\n  // update current question with an answer\r\n  const setNextQuestion = (givenAnswer) => {\r\n    qList[currentIndex].givenAnswer = givenAnswer;\r\n    const unsweredQuestion = qList[currentIndex];\r\n    qList.splice(currentIndex, 1, unsweredQuestion);\r\n    setQList(qList);\r\n    setCurrentIndex(currentIndex + 1);\r\n  };\r\n\r\n  function calculateCompactResult() {\r\n    const totalCount = qList.length;\r\n    const list = Object.values(qList);\r\n    const incorrectAnswers = list.filter((i) => i.givenAnswer !== i.expectedAnswer).length;\r\n    const totalCorrectAnswered = list.filter((i) => i.expectedAnswer == i.givenAnswer).length;\r\n\r\n    if (incorrectAnswers + totalCorrectAnswered !== totalCount) {\r\n      console.log(\"Incorrect result calculation!\");\r\n    }\r\n\r\n    return {\r\n      totalCount: totalCount,\r\n      incorrectAnswers: incorrectAnswers,\r\n      totalCorrectAnswered: totalCorrectAnswered,\r\n    };\r\n  }\r\n\r\n  const calculateDatailedResult = () => {\r\n    console.log(88);\r\n    setDisplayTable(true);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {isListCompleted ? (\r\n        <div>\r\n          <h2>Test completed!</h2>\r\n          <AnswerTable\r\n            results={calculateCompactResult()}\r\n            onClick={calculateDatailedResult}\r\n            detailedResults={qList}\r\n            displayTable={displayTable}\r\n          />\r\n        </div>\r\n      ) : (\r\n          <CurrentQuestionForm\r\n            onClick={setNextQuestion}\r\n            currentQuestion={qList[currentIndex]}\r\n          />\r\n        )}\r\n    </div>\r\n  );\r\n}\r\n","D:\\prj\\questionnaire\\src\\components\\CurrentQuestionForm.jsx",[],"D:\\prj\\questionnaire\\src\\components\\AnswerTable.jsx",[],"D:\\prj\\questionnaire\\src\\index.js",[],["29","30"],"D:\\prj\\questionnaire\\src\\components\\Constructor.jsx",[],{"ruleId":"31","severity":1,"message":"32","line":33,"column":70,"nodeType":"33","messageId":"34","endLine":33,"endColumn":72},{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","replacedBy":"38"},"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-native-reassign",["39"],"no-negated-in-lhs",["40"],"no-global-assign","no-unsafe-negation"]